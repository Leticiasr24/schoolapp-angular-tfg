{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { collection, addDoc } from '@angular/fire/firestore';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/firestore\";\nexport let UsuariosService = /*#__PURE__*/(() => {\n  class UsuariosService {\n    constructor(firestore) {\n      this.firestore = firestore;\n    }\n\n    addAlumno(usuario) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          // Validar los datos del usuario antes de agregarlo a la base de datos\n          if (!this.validarUsuario(usuario)) {\n            // usuario.rol_id = \n            throw new Error('Los datos del usuario no son válidos');\n          } // Agregar el usuario a la colección \"usuarios\" en Firestore\n\n\n          const usuarioRef = collection(this.firestore, 'usuarios');\n          yield addDoc(usuarioRef, usuario);\n        } catch (error) {\n          console.error('Error al agregar usuario:', error);\n          throw error; // Propagar el error para que pueda ser manejado en el componente que llama a este método\n        }\n      });\n    }\n\n    validarUsuario(usuario) {\n      if (!usuario.nombre_usuario || !usuario.email_usuario || !usuario.rol_id || !usuario.fecha_nacimiento_usuario) {\n        return false; // Devolver false si algún campo obligatorio está en blanco\n      }\n\n      return true;\n    }\n\n  }\n\n  UsuariosService.ɵfac = function UsuariosService_Factory(t) {\n    return new (t || UsuariosService)(i0.ɵɵinject(i1.Firestore));\n  };\n\n  UsuariosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsuariosService,\n    factory: UsuariosService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsuariosService;\n})();","map":null,"metadata":{},"sourceType":"module"}